<!-- Main window for the TO-DO-hicky app using WPF -->
<Window x:Class="ToDoHicky.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:ToDoHicky"
        Title="TO-DO-hicky" Height="691" Width="1000">
    <!-- Define resources used in the window, like the FlattenNewlinesConverter -->
    <Window.Resources>
        <local:FlattenNewlinesConverter x:Key="FlattenNewlinesConverter"/>
        <!-- Validation rule for non-empty TaskID -->
        <local:NonEmptyStringValidationRule x:Key="NonEmptyStringValidationRule"/>
    </Window.Resources>
    <!-- Main layout grid with margins -->
    <Grid Margin="10">
        <!-- Define grid rows: buttons, checkbox, datagrid, splitter, notes textbox, status text -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Horizontal stack panel for action buttons -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
            <Button Content="Add Task" Click="AddTask_Click" Margin="0,0,5,0" Padding="5"/>
            <Button Content="Save" Click="SaveTasks_Click" Padding="5"/>
        </StackPanel>
        <!-- Checkbox to toggle visibility of completed tasks -->
        <CheckBox x:Name="HideCompletedCheckBox" Content="Hide Completed Tasks" Margin="107,6,0,16" Checked="HideCompletedCheckBox_Checked" Unchecked="HideCompletedCheckBox_Unchecked"/>
        <!-- DataGrid to display tasks with custom columns and heatmap coloring -->
        <DataGrid Grid.Row="2" x:Name="TasksGrid" AutoGenerateColumns="False" CanUserAddRows="False" ItemsSource="{Binding FilteredTasks.View}" PreviewKeyDown="TasksGrid_PreviewKeyDown" MouseDown="TasksGrid_MouseDown" SelectionChanged="TasksGrid_SelectionChanged">
            <!-- Apply heatmap color to row background based on task status -->
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding HeatMapColor}"/>
                </Style>
            </DataGrid.RowStyle>
            <!-- Define columns for the DataGrid -->
            <DataGrid.Columns>
                <!-- ID column, now editable with validation -->
                <DataGridTextColumn Header="ID" Width="50" IsReadOnly="False">
                    <DataGridTextColumn.Binding>
                        <Binding Path="TaskID" UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <local:NonEmptyStringValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <!-- Task name column, resizable -->
                <DataGridTextColumn Header="Task" Binding="{Binding TaskName}" Width="*"/>
                <!-- Status dropdown with predefined options -->
                <DataGridComboBoxColumn Header="Status" SelectedItemBinding="{Binding Status}" Width="100">
                    <DataGridComboBoxColumn.ItemsSource>
                        <x:Array Type="{x:Type sys:String}">
                            <sys:String>Not Started</sys:String>
                            <sys:String>In Progress</sys:String>
                            <sys:String>Completed</sys:String>
                        </x:Array>
                    </DataGridComboBoxColumn.ItemsSource>
                </DataGridComboBoxColumn>
                <!-- Assigned user column -->
                <DataGridTextColumn Header="Assigned User" Binding="{Binding AssignedUser}" Width="150"/>
                <!-- Due date column with date picker for editing -->
                <DataGridTemplateColumn Header="Due Date" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DueDate, StringFormat=yyyy-MM-dd}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding DueDate}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Priority dropdown with predefined options -->
                <DataGridComboBoxColumn Header="Priority" SelectedItemBinding="{Binding Priority}" Width="100">
                    <DataGridComboBoxColumn.ItemsSource>
                        <x:Array Type="{x:Type sys:String}">
                            <sys:String>Low</sys:String>
                            <sys:String>Medium</sys:String>
                            <sys:String>High</sys:String>
                            <sys:String>URGENT</sys:String>
                        </x:Array>
                    </DataGridComboBoxColumn.ItemsSource>
                </DataGridComboBoxColumn>
                <!-- Notes column with single-line display and multi-line editing -->
                <DataGridTemplateColumn x:Name="NotesColumn" Header="Notes" Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Notes, Converter={StaticResource FlattenNewlinesConverter}}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Notes, UpdateSourceTrigger=LostFocus}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!-- GridSplitter for resizing between DataGrid and NotesTextBox -->
        <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Gray"/>
        <!-- TextBox for editing selected task's notes -->
        <TextBox Grid.Row="4" x:Name="NotesTextBox" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" Text="{Binding SelectedItem.Notes, ElementName=TasksGrid, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding HasSelectedTask}"/>
        <!-- Status text for feedback messages -->
        <TextBlock Grid.Row="5" x:Name="StatusText" Margin="0,10,0,0" Foreground="Red"/>
    </Grid>
</Window>